<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hit.to.go.database.dao.CourseMapper">
    <resultMap id="courseMap" type="hit.to.go.entity.course.Course">
        <id column="course_id" property="id" />
        <result column="course_name" property="name" />
        <result column="course_teacher_id" property="teacherId" />
        <result column="course_intro" property="intro" />
        <result column="course_img" property="img" />
        <result column="note" property="note" />
        <result column="course_state" property="state" />
        <result column="course_label" property="label" />
        <result column="course_user_num" property="userNum" />
        <result column="course_lesson_num" property="lessonNum" />
        <result column="course_grade" property="grade" />
    </resultMap>

    <resultMap id="studyCourseMap" type="hit.to.go.entity.course.StudyCourse">
        <id column="course_id" property="id" />
        <result column="course_name" property="name" />
        <result column="course_teacher_id" property="teacherId" />
        <result column="course_intro" property="intro" />
        <result column="course_img" property="img" />
        <result column="note" property="note" />
        <result column="course_state" property="state" />
        <result column="course_label" property="label" />
        <result column="course_user_num" property="userNum" />
        <result column="course_lesson_num" property="lessonNum" />
        <result column="course_grade" property="grade" />
        <result column="study_id" property="studyId" />
        <result column="study_user_id" property="studentId" />
        <result column="study_date" property="date" />
        <result column="study_state" property="studyState" />
    </resultMap>


    <insert id="addNewCourse" parameterType="Map" useGeneratedKeys="true" keyProperty="course_id">
        insert into course
        (course_name, course_teacher_id, course_intro, note,
        <if test="img != null">
            course_img,
        </if>
        course_state, course_label, course_lesson_num)
        values
        (
          #{courseName},
          #{id},
          #{courseIntro, jdbcType=VARCHAR},
          #{note, jdbcType=VARCHAR},
          <if test="img != null">
              #{img},
          </if>
          2,
          #{label, jdbcType=VARCHAR},
          #{lessonNum, jdbcType=INTEGER}
        )
    </insert>

    <insert id="saveDraft" parameterType="Map" useGeneratedKeys="true" keyProperty="course_id">
        insert into course
        (course_name, course_teacher_id, course_intro, note,
        <if test="img != null">
            course_img,
        </if>
        course_state, course_label, course_lesson_num)
        values
        (
          #{courseName},
          #{id},
          #{courseIntro, jdbcType=VARCHAR},
          #{note, jdbcType=VARCHAR},
          <if test="img != null">
            #{img},
          </if>
          1,
          #{label, jdbcType=VARCHAR},
          #{lessonNum, jdbcType=INTEGER}
        )
    </insert>

    <update id="releaseDraftCourse" parameterType="String">
        update course set course_state = 2 where course_id = #{courseId} and course_teacher_id = #{id} and course_state = 1
    </update>

    <update id="acceptCourseApply" parameterType="String">
        update course set course_state = 4 where course_id = #{id} and course_state = 2
    </update>

    <update id="rejectCourseApply" parameterType="String">
        update course set course_state = 3 where course_id = #{id} and course_state = 2
    </update>

    <update id="updateDraftCourse" parameterType="String">
        update course set
        course_name = #{courseName},
        course_intro = #{intro, jdbcType=VARCHAR},
        note = #{note, jdbcType=VARCHAR},
        <if test="img != null">
            course_img = #{img, jdbcType=INTEGER},
        </if>
        course_state = 1,
        course_label = #{label, jdbcType=VARCHAR},
        course_lesson_num = #{lessonNum, jdbcType=INTEGER}
        where course_state = 1 and course_teacher_id = ${id} and course_id = #{courseId}
    </update>

    <select id="getAllTeacherCourses" parameterType="String" resultMap="courseMap">
        select * from course where course_teacher_id = #{id}
    </select>

    <select id="getAllStudentCourses" parameterType="String" resultMap="studyCourseMap">
        select * from course, study where course.course_id = study_course_id and study_user_id = #{id}
    </select>

    <select id="getJoinedCourses" parameterType="String" resultMap="studyCourseMap">
        select * from course, study
        where course.course_id = study_course_id and study_user_id = #{id} and study_state = 1
    </select>

    <select id="getLearningCourses" parameterType="String" resultMap="studyCourseMap">
        select * from course, study
        where course.course_id = study_course_id and study_user_id = #{id} and study_state = 2
    </select>

    <select id="getLearnedCourses" parameterType="String" resultMap="studyCourseMap">
        select * from course, study
        where course.course_id = study_course_id and study_user_id = #{id} and study_state = 3
    </select>

    <select id="getCourseById" parameterType="String" resultMap="courseMap">
        select * from course where course_id = #{courseId}
    </select>

    <select id="getAllDraftCourses" parameterType="String" resultMap="courseMap">
        select * from course where course_state = 1 and course_teacher_id = #{id}
    </select>

    <select id="getAllApplyingCourses" parameterType="String" resultMap="courseMap">
        select * from course where course_state = 2 and course_teacher_id = #{id}
    </select>

    <select id="getAllRejectedCourses" parameterType="String" resultMap="courseMap">
        select * from course where course_state = 3 and course_teacher_id = #{id}
    </select>

    <select id="getAllReleasedCourses" parameterType="String" resultMap="courseMap">
        select * from course where course_state = 4 and course_teacher_id = #{id}
    </select>

    <select id="getManageableCourses" parameterType="Map" resultMap="courseMap">
        select course.* from course, user where 1 = 1
        <choose>
            <when test="type == 'accepted'">
                and course_state = 4
            </when>
            <when test="type == 'rejected'">
                and course_state = 3
            </when>
            <when test="type == 'applying'">
                and course_state = 2
            </when>
            <when test="type == null or type == 'all'">
                and course_state > 1
            </when>
            <otherwise>
                and course_state = -1000
            </otherwise>
        </choose>
        and user.user_id = #{id} and user.user_type = 2
    </select>
</mapper>
